#!/bin/bash
# This file was autogenerated by nexus-deb {{ nexus_deb_version }}
set -e
set -o pipefail

declare -r init_type='{{ nexus_deb_init }}'
declare -r no_rebuild='{{ nexus_deb_no_rebuild }}'
declare -r install_strategy='{{ install_strategy }}'
declare -r npx_path='{{ npx_path }}'
declare -r install_dir='{{nexus_deb_install_dir}}'
declare -r executable='{{ nexus_deb_executable_name }}'
declare -r package_name='{{ nexus_deb_package_name }}'

add_user() {
  : "${1:?'User was not defined'}"
  declare -r user="$1"
  declare -r uid="$2"

  if [ -z "$uid" ]; then
    declare -r uid_flags=""
  else
    declare -r uid_flags="--uid $uid"
  fi

  declare -r group="${3:-$user}"
  declare -r descr="${4:-No description}"
  declare -r shell="${5:-/bin/false}"

  if ! getent passwd | grep -q "^$user:"; then
    echo "Creating system user: $user in $group with $descr and shell $shell"
    useradd $uid_flags --gid $group --no-create-home --system --shell $shell -c "$descr" $user
  fi
}

add_group() {
  : "${1:?'Group was not defined'}"
  declare -r group="$1"
  declare -r gid="$2"

  if [ -z "$gid" ]; then
    declare -r gid_flags=""
  else
    declare -r gid_flags="--gid $gid"
  fi

  if ! getent group | grep -q "^$group:" ; then
    echo "Creating system group: $group"
    groupadd $gid_flags --system $group
  fi
}

add_to_path () {
  : "${1:?'bin path was not defined'}"
  declare -r bin_path="$1"

  echo "Adding $bin_path to /usr/bin/$executable"


  if [ -L "/usr/bin/$executable" ]; then
    echo "File already in path!"
  else
    ln -s "$bin_path" /usr/bin/"$executable"
    echo "Symlink /usr/bin/$executable created."
  fi

}

start_service () {
  : "${1:?'Service name was not defined'}"
  declare -r service_name="$1"

  systemctl enable "$service_name.service" && \
  systemctl start "$service_name.service"
}

dependency_install() {
  : "${1:?'Package name was not defined'}"
  cd "{{ nexus_deb_install_dir }}/$1/app"

case $install_strategy in
    auto)
      if [ ! -d './node_modules' ]; then
        if hash "$npx_path" 2> /dev/null; then
          echo "Directory 'node_modules' did not exist. Running 'yarn'"
          "$npx_path" yarn
        else
          echo "WARN: 'npx' was not on the path. Dependencies may be missing."
        fi
      else
        if [ "$no_rebuild" -eq 0 ]; then
          if hash "$npx_path"x 2> /dev/null; then
            echo "Directory 'node_modules' exists. Running 'yarn'"
            "$npx_path" yarn
          else
            echo "WARN: 'npx' was not on the path. Dependencies may be missing."
          fi
        fi
      fi
      ;;
    copy)
      # pass
      ;;
    npm-install)
      echo 'Installing dependenencies from YARN'
      "$npx_path" yarn
      ;;
    *)
      echo "WARN: Unexpected install strategy: $install_strategy"
      echo 'WARN: Dependencies may be missing.'
      ;;
  esac
}

dependency_install '{{ nexus_deb_package_name }}'

if [[ "$init_type" != 'none' ]]; then
  add_group '{{ nexus_deb_group }}' ''
  add_user '{{ nexus_deb_user }}' '' '{{ nexus_deb_group }}' '{{ nexus_deb_user }} user-daemon' '/bin/false'

  mkdir -p '/var/log/{{ nexus_deb_package_name }}'
  chown -R '{{ nexus_deb_user }}:{{ nexus_deb_group }}' '/var/log/{{ nexus_deb_package_name }}'

  start_service '{{ nexus_deb_package_name }}'
fi

add_to_path '{{ nexus_deb_install_dir }}/{{ nexus_deb_package_name }}/bin/{{ nexus_deb_executable_name }}'